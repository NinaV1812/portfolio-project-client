{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { moviesApi, simpleUrl } from \"../../config/constant\";\nexport var FETCH_MOVIES = \"FETCH_MOVIES\";\nexport var START_GAME = \"START_GAME\";\nexport var MOVIES_INGAME = \"MOVIES_INGAME\";\nexport var FetchMovies = function FetchMovies(movies) {\n  return {\n    type: FETCH_MOVIES,\n    payload: movies\n  };\n};\nexport var StartGame = function StartGame(game) {\n  return {\n    type: START_GAME,\n    payload: game\n  };\n};\nexport var MoviesInGame = function MoviesInGame(moviesInGame) {\n  return {\n    type: MOVIES_INGAME,\n    payload: moviesInGame\n  };\n};\nexport var getMovies = function getMovies(genres) {\n  return function _callee(dispatch, getState) {\n    var response, movies;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(moviesApi + \"&with_genres=\" + genres.join(\",\")));\n\n          case 3:\n            response = _context.sent;\n            movies = response.data.results;\n            console.log(\"Yep!\");\n            dispatch(FetchMovies(movies));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0.response;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var setUpGame = function setUpGame(started) {\n  return function _callee2(dispatch, getState) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(simpleUrl + \"/set_up_game\", {\n              started: started\n            }));\n\n          case 3:\n            response = _context2.sent;\n            console.log(\"response\", response.data);\n            dispatch(StartGame(response.data));\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.t0.response;\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var gameMovies = function gameMovies(movie, gameId) {\n  return function _callee3(dispatch, getState) {\n    var response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"called\");\n            _context3.prev = 1;\n            console.log(\"string\");\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(simpleUrl + \"/movies_in_game\", {\n              movie: movie,\n              gameId: gameId\n            }));\n\n          case 5:\n            response = _context3.sent;\n            console.log(\"response\", response.data);\n            dispatch(MoviesInGame(response.data));\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            _context3.t0.response;\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n};","map":{"version":3,"sources":["/home/nina/Code/portfolio/client/store/movies/action.js"],"names":["axios","moviesApi","simpleUrl","FETCH_MOVIES","START_GAME","MOVIES_INGAME","FetchMovies","movies","type","payload","StartGame","game","MoviesInGame","moviesInGame","getMovies","genres","dispatch","getState","get","join","response","data","results","console","log","setUpGame","started","post","gameMovies","movie","gameId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { moviesApi, simpleUrl } from \"../../config/constant\";\n\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const START_GAME = \"START_GAME\";\nexport const MOVIES_INGAME = \"MOVIES_INGAME\";\n\nexport const FetchMovies = (movies) => ({\n  type: FETCH_MOVIES,\n  payload: movies,\n});\n\nexport const StartGame = (game) => ({\n  type: START_GAME,\n  payload: game,\n});\n\nexport const MoviesInGame = (moviesInGame) => ({\n  type: MOVIES_INGAME,\n  payload: moviesInGame,\n});\n\nexport const getMovies = (genres) => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(\n        `${moviesApi}&with_genres=${genres.join(\",\")}`\n      );\n      const movies = response.data.results;\n      console.log(\"Yep!\");\n      dispatch(FetchMovies(movies));\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n\nexport const setUpGame = (started) => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.post(`${simpleUrl}/set_up_game`, {\n        started: started,\n      });\n      console.log(\"response\", response.data);\n\n      dispatch(StartGame(response.data));\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n\nexport const gameMovies = (movie, gameId) => {\n  return async (dispatch, getState) => {\n    console.log(\"called\");\n    try {\n      console.log(\"string\");\n      const response = await axios.post(`${simpleUrl}/movies_in_game`, {\n        movie: movie,\n        gameId: gameId,\n      });\n      console.log(\"response\", response.data);\n      // console.log(\"movie\", movie);\n\n      dispatch(MoviesInGame(response.data));\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}