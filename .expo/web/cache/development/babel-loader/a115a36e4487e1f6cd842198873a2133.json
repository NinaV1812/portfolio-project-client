{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { apiUrl } from \"../../config/constant\";\nexport var FETCH_GENRES = \"FETCH_GENRES\";\nexport var fetchGenres = function fetchGenres(genres) {\n  return {\n    type: FETCH_GENRES,\n    payload: genres\n  };\n};\nexport var getGenres = function getGenres() {\n  return function _callee(dispatch, getState) {\n    var response, genres;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(apiUrl + \"/genres\"));\n\n          case 3:\n            response = _context.sent;\n            genres = response.data.genres;\n            dispatch(fetchGenres(genres));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0.response;\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var joinTheGame = function joinTheGame() {\n  return function _callee2(dispatch, getState) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(apiUrl + \"/join\", {\n              gameId: game.id,\n              movieId: movieId,\n              title: title,\n              overview: overview\n            }));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.t0.response;\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};","map":{"version":3,"sources":["/home/nina/Code/portfolio/client/store/genres/action.js"],"names":["axios","apiUrl","FETCH_GENRES","fetchGenres","genres","type","payload","getGenres","dispatch","getState","get","response","data","joinTheGame","post","gameId","game","id","movieId","title","overview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AAEA,OAAO,IAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD;AAAA,SAAa;AACtCC,IAAAA,IAAI,EAAEH,YADgC;AAEtCI,IAAAA,OAAO,EAAEF;AAF6B,GAAb;AAAA,CAApB;AAKP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBT,KAAK,CAACU,GAAN,CAAaT,MAAb,aAFpB;;AAAA;AAEGU,YAAAA,QAFH;AAIGP,YAAAA,MAJH,GAIYO,QAAQ,CAACC,IAAT,CAAcR,MAJ1B;AAKHI,YAAAA,QAAQ,CAACL,WAAW,CAACC,MAAD,CAAZ,CAAR;AALG;AAAA;;AAAA;AAAA;AAAA;AAOH,wBAAIO,QAAJ;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAUD,CAXM;AAaP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO,kBAAOL,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBT,KAAK,CAACc,IAAN,CAAcb,MAAd,YAA6B;AAClDc,cAAAA,MAAM,EAAEC,IAAI,CAACC,EADqC;AAElDC,cAAAA,OAAO,EAAPA,OAFkD;AAGlDC,cAAAA,KAAK,EAALA,KAHkD;AAIlDC,cAAAA,QAAQ,EAARA;AAJkD,aAA7B,CAFpB;;AAAA;AAEGT,YAAAA,QAFH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUH,yBAAIA,QAAJ;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAaD,CAdM","sourcesContent":["import axios from \"axios\";\nimport { apiUrl } from \"../../config/constant\";\n\nexport const FETCH_GENRES = \"FETCH_GENRES\";\n\nexport const fetchGenres = (genres) => ({\n  type: FETCH_GENRES,\n  payload: genres,\n});\n\nexport const getGenres = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`${apiUrl}/genres`);\n      //    console.log(\"response\", response.data.genres)\n      const genres = response.data.genres;\n      dispatch(fetchGenres(genres));\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n\nexport const joinTheGame = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.post(`${apiUrl}/join`, {\n        gameId: game.id,\n        movieId,\n        title,\n        overview,\n      });\n      // console.log(\"Yep!\", response);\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}