{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nina/Code/portfolio/client/pages/genres-page.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { getGenres } from \"../store/genres/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectGenres } from \"../store/genres/selector\";\nimport MyBox from \"../components/check-box-group\";\nimport { setUpGame } from \"../store/movies/action\";\nimport { updateGenres } from \"../store/games/action\";\nimport { selectGame } from \"../store/movies/selector\";\nexport default function GenresPage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var genres = useSelector(selectGenres);\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreList = _useState2[0],\n      set_genreList = _useState2[1];\n\n  var started = true;\n  var game = useSelector(selectGame);\n  console.log(\"gamessssss\", game);\n  useEffect(function () {\n    dispatch(getGenres());\n  }, []);\n  console.log(\"gList\", genreList);\n\n  if (game) {\n    var gameID = game.id;\n    console.log(\"gameID\", gameID);\n\n    var navigator = function navigator() {\n      navigation.navigate(\"display-movies\", {\n        genre: genreList\n      });\n    };\n\n    var toDoDispatch = function toDoDispatch() {\n      dispatch(updateGenres(gameID, genreList));\n    };\n\n    var functionCombined = function functionCombined() {\n      toDoDispatch();\n      navigator();\n    };\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Choose you genre\"), genres.map(function (genre) {\n      return React.createElement(MyBox, {\n        key: genre.id,\n        title: genre.name,\n        onPress: function onPress() {\n          set_genreList([].concat(_toConsumableArray(genreList), [genre.id]));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      });\n    }), React.createElement(Button, {\n      title: \"Start choosing\",\n      onPress: function onPress() {\n        return functionCombined();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return Loading;\n}","map":{"version":3,"sources":["/home/nina/Code/portfolio/client/pages/genres-page.js"],"names":["React","useEffect","useState","Icon","getGenres","useSelector","useDispatch","selectGenres","MyBox","setUpGame","updateGenres","selectGame","GenresPage","navigation","genres","dispatch","genreList","set_genreList","started","game","console","log","gameID","id","navigator","navigate","genre","toDoDispatch","functionCombined","map","name","Loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,SAAT;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT;AACA,OAAOC,KAAP;AACA,SAASC,SAAT;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACjD,MAAMC,MAAM,GAAGT,WAAW,CAACE,YAAD,CAA1B;AACA,MAAMQ,QAAQ,GAAGT,WAAW,EAA5B;;AAFiD,kBAGdJ,QAAQ,CAAC,EAAD,CAHM;AAAA;AAAA,MAG1Cc,SAH0C;AAAA,MAG/BC,aAH+B;;AAIjD,MAAMC,OAAO,GAAG,IAAhB;AACA,MAAMC,IAAI,GAAGd,WAAW,CAACM,UAAD,CAAxB;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,SAArB;;AAGA,MAAIG,IAAJ,EAAU;AACR,QAAMG,MAAM,GAAGH,IAAI,CAACI,EAApB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,MAAtB;;AAEA,QAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBX,MAAAA,UAAU,CAACY,QAAX,CAAoB,gBAApB,EAAsC;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAtC;AACD,KAFD;;AAIA,QAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBZ,MAAAA,QAAQ,CAACL,YAAY,CAACY,MAAD,EAASN,SAAT,CAAb,CAAR;AACD,KAFD;;AAIA,QAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,MAAAA,YAAY;AACZH,MAAAA,SAAS;AACV,KAHD;;AAKA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGGV,MAAM,CAACe,GAAP,CAAW,UAACH,KAAD,EAAW;AACrB,aACE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACH,EADb;AAEE,QAAA,KAAK,EAAEG,KAAK,CAACI,IAFf;AAGE,QAAA,OAAO,EAAE,mBAAM;AACbb,UAAAA,aAAa,8BAAKD,SAAL,IAAgBU,KAAK,CAACH,EAAtB,GAAb;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVA,CAHH,EAsBE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,OAAO,EAAE;AAAA,eAAMK,gBAAgB,EAAtB;AAAA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADF,CADF;AA4BD;;AACD,SAAOG,OAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Text, View, ScrollView } from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { getGenres } from \"../store/genres/action\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectGenres } from \"../store/genres/selector\";\nimport MyBox from \"../components/check-box-group\";\nimport { setUpGame } from \"../store/movies/action\";\nimport { updateGenres } from \"../store/games/action\";\nimport { selectGame } from \"../store/movies/selector\";\n\nexport default function GenresPage({ navigation }) {\n  const genres = useSelector(selectGenres);\n  const dispatch = useDispatch();\n  const [genreList, set_genreList] = useState([]);\n  const started = true; /// also, ask if it is okay to that, so all my games are started in DB.\n  const game = useSelector(selectGame);\n\n  console.log(\"gamessssss\", game);\n\n  useEffect(() => {\n    dispatch(getGenres());\n  }, []);\n\n  console.log(\"gList\", genreList);\n\n  // console.log(\"genressss\", genres);\n  if (game) {\n    const gameID = game.id;\n    console.log(\"gameID\", gameID);\n\n    const navigator = () => {\n      navigation.navigate(\"display-movies\", { genre: genreList });\n    };\n\n    const toDoDispatch = () => {\n      dispatch(updateGenres(gameID, genreList)); // put or putch thunk in order to add genres to DB and be able to get them\n    };\n\n    const functionCombined = () => {\n      toDoDispatch();\n      navigator();\n    };\n\n    return (\n      <View>\n        <ScrollView>\n          <Text>Choose you genre</Text>\n\n          {genres.map((genre) => {\n            return (\n              <MyBox\n                key={genre.id}\n                title={genre.name}\n                onPress={() => {\n                  set_genreList([...genreList, genre.id]);\n                }}\n              />\n            );\n          })}\n\n          {/* <Button\n          icon={<Icon name=\"arrow-right\" size={15} color=\"white\" />}\n          title=\"Go futher\"\n          onPress={() =>\n            navigation.navigate(\"StartGamePage\", { genre: genreList })\n          }\n        /> */}\n          <Button title=\"Start choosing\" onPress={() => functionCombined()} />\n        </ScrollView>\n      </View>\n    );\n  }\n  return Loading;\n}\n"]},"metadata":{},"sourceType":"module"}