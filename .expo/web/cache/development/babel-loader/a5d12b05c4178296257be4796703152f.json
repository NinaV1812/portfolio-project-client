{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { urlToDB } from \"../../config/constant\";\nexport var gameCode = function gameCode(code) {\n  return function _callee(dispatch, getState) {\n    var response, _gameCode;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(urlToDB + \"/game/\" + code));\n\n          case 3:\n            response = _context.sent;\n            _gameCode = response.data;\n            console.log(\"Yep!\", response);\n            dispatch(FetchMovies(_gameCode));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0.response;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};","map":{"version":3,"sources":["/home/nina/Code/portfolio/client/store/games/action.js"],"names":["axios","urlToDB","gameCode","code","dispatch","getState","get","response","data","console","log","FetchMovies"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;AASA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAChC,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBL,KAAK,CAACM,GAAN,CAAaL,OAAb,cAA6BE,IAA7B,CAFpB;;AAAA;AAEGI,YAAAA,QAFH;AAGGL,YAAAA,SAHH,GAGcK,QAAQ,CAACC,IAHvB;AAIHC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,QAApB;AACAH,YAAAA,QAAQ,CAACO,WAAW,CAACT,SAAD,CAAZ,CAAR;AALG;AAAA;;AAAA;AAAA;AAAA;AAOH,wBAAIK,QAAJ;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAUD,CAXM","sourcesContent":["import axios from \"axios\";\nimport { urlToDB } from \"../../config/constant\";\n\n// export const MOVIES_INGAME = \"MOVIES_INGAME\";\n\n// export const MoviesInGame = (moviesInGame) => ({\n//     type: MOVIES_INGAME,\n//     payload: moviesInGame,\n//   });\n\nexport const gameCode = (code) => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`${urlToDB}/game/${code}`);\n      const gameCode = response.data;\n      console.log(\"Yep!\", response);\n      dispatch(FetchMovies(gameCode));\n    } catch (err) {\n      err.response;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}